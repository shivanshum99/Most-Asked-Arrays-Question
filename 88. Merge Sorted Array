Brute Force Solution:
class Solution {
public:
    void merge(vector<int>& a, int n1, vector<int>& b, int n2) {
        int i=0; int j=0;
        vector<int> ans;

        while(i<n1 && j<n2){
            if(a[i]<=b[j]){
                ans.push_back(a[i]);
                i++;
            }
            else if(b[j]<=a[i]){
                ans.push_back(b[j]);
                j++;
            }
        }

        while(i<n1){
            ans.push_back(a[i]);
            i++;
        }
        while(j<n2){
            ans.push_back(b[j]);
            j++;
        }
        for(int i=0;i<ans.size();i++){
            a[i] = ans[i];
        }
    }
};
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Optimal Solution:
class Solution {
public:
    void merge(vector<int>& a, int n1, vector<int>& b, int n2) {
        int left = n1-1; int right = 0;

        while(left>=0 && right<n2){
            if(a[left]>b[right]){
                swap(a[left], b[right]);
                left--; right++;
            }
            else{
                left--;
            }
        }
        sort(a.begin(), a.end());
        sort(b.begin(), b.end());
    }
};
