Brute Force Solution:

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        vector<int> temp;
        int n = nums.size();
        for(int i=0;i<n;i++)
        {
            if(nums[i]!=0){
                temp.push_back(nums[i]);
            }
        }
        for(int i = 0;i<temp.size();i++)
        {
            nums[i] = temp[i];
        }

        for(int i = temp.size();i<n;i++)
        {
            nums[i] = 0;
        }
    }
};
----------------------------------------------------------------------------------------------------------------------------------------------------------
Optimise Solution:

Solution 1:

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int i =0;
        for(const int num: nums)
        {
            if(num!=0){
                nums[i++] = num;
            }
        }
        while(i<nums.size())
        {
            nums[i++] = 0;
        }
    }
};

Solution 2:

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int j = -1;
        int n = nums.size();
        for(int i=0;i<n;i++){
            if(nums[i]==0)
            {
                j = i;
                break;
            }
        }
        if(j==-1) return ;
        for(int i = j+1;i<n;i++)
        {
            if(nums[i]!=0)
            {
                swap(nums[i],nums[j]);
                j++;
            }
        }
    }
};
